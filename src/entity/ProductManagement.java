package entity;

import java.util.ArrayList;
import java.util.List;

public class ProductManagement extends Admin {
    // ===== Thu·ªôc t√≠nh =====
    private List<Product> products;     // Danh s√°ch s·∫£n ph·∫©m trong h·ªá th·ªëng
    private List<Category> categories;  // Danh m·ª•c s·∫£n ph·∫©m

    // ===== Constructor =====
    public ProductManagement(int adminID, String name, String email, String password,
                             String phone, String address, String role) {
        super(adminID, name, email, password, phone, address, role);
        this.products = new ArrayList<>();
        this.categories = new ArrayList<>();
    }

    // ================== QU·∫¢N L√ù S·∫¢N PH·∫®M ==================

    /** 1. Th√™m s·∫£n ph·∫©m m·ªõi */
    public void addProduct(Product productInfo) {
        for (Product p : products) {
            if (p.getProductID().equals(productInfo.getProductID())) {
                System.out.println("‚ùå S·∫£n ph·∫©m v·ªõi ID n√†y ƒë√£ t·ªìn t·∫°i!");
                return;
            }
        }
        products.add(productInfo);
        System.out.println("‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m th√†nh c√¥ng: " + productInfo.getName());
    }

    /** 2. C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m */
    public void updateProduct(String productID, Product newInfo) {
        for (Product p : products) {
            if (p.getProductID().equals(productID)) {
                p.updateProductInfo(newInfo);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m c√≥ ID: " + productID);
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi ID: " + productID);
    }

    /** 3. X√≥a s·∫£n ph·∫©m */
    public void deleteProduct(String productID) {
        for (Product p : products) {
            if (p.getProductID().equals(productID)) {
                products.remove(p);
                System.out.println("‚úÖ ƒê√£ x√≥a s·∫£n ph·∫©m c√≥ ID: " + productID);
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi ID: " + productID);
    }

    /** 4. L·∫•y th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m */
    public Product getProduct(String productID) {
        for (Product p : products) {
            if (p.getProductID().equals(productID)) {
                p.getProductInfo();
                return p;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m v·ªõi ID: " + productID);
        return null;
    }

    /** 5. T√¨m ki·∫øm s·∫£n ph·∫©m theo t√™n ho·∫∑c danh m·ª•c */
    public List<Product> searchProduct(String keyword) {
        List<Product> result = new ArrayList<>();
        for (Product p : products) {
            if (p.getName().toLowerCase().contains(keyword.toLowerCase()) ||
                p.getCategory().toLowerCase().contains(keyword.toLowerCase())) {
                result.add(p);
            }
        }

        if (result.isEmpty()) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o v·ªõi t·ª´ kh√≥a: " + keyword);
        } else {
            System.out.println("üîç K·∫øt qu·∫£ t√¨m ki·∫øm cho t·ª´ kh√≥a '" + keyword + "':");
            for (Product p : result) {
                System.out.println("- " + p.getName() + " (ID: " + p.getProductID() + ")");
            }
        }

        return result;
    }

    /** 6. Li·ªát k√™ t·∫•t c·∫£ s·∫£n ph·∫©m */
    public void displayAllProducts() {
        if (products.isEmpty()) {
            System.out.println("‚ö† Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong h·ªá th·ªëng.");
            return;
        }
        System.out.println("=== Danh s√°ch s·∫£n ph·∫©m ===");
        for (Product p : products) {
            p.getProductInfo();
            System.out.println("-------------------------");
        }
    }

    // ================== QU·∫¢N L√ù DANH M·ª§C ==================

    /** Th√™m danh m·ª•c v√†o danh s√°ch */
    public void addCategory(Category category) {
        for (Category c : categories) {
            if (c.getCategoryID() == category.getCategoryID()) {
                System.out.println("‚ùå Danh m·ª•c v·ªõi ID n√†y ƒë√£ t·ªìn t·∫°i!");
                return;
            }
        }
        categories.add(category);
        System.out.println("‚úÖ ƒê√£ th√™m danh m·ª•c m·ªõi: " + category.getName());
    }

    /** L·∫•y danh s√°ch t·∫•t c·∫£ danh m·ª•c */
    public List<Category> getCategories() {
        return categories;
    }

    /** Li·ªát k√™ t·∫•t c·∫£ danh m·ª•c */
    public void displayAllCategories() {
        if (categories.isEmpty()) {
            System.out.println("‚ö† Kh√¥ng c√≥ danh m·ª•c n√†o.");
            return;
        }
        System.out.println("=== Danh s√°ch danh m·ª•c ===");
        for (Category c : categories) {
            System.out.println("ID: " + c.getCategoryID() + " | T√™n: " + c.getName() + " | Tr·∫°ng th√°i: " + c.getStatus());
        }
    }

    /** T√¨m danh m·ª•c theo ID */
    public Category findCategoryByID(int categoryID) {
        for (Category c : categories) {
            if (c.getCategoryID() == categoryID) {
                return c;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y danh m·ª•c v·ªõi ID: " + categoryID);
        return null;
    }
}
