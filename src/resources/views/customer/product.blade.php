@extends('customer.layout')
@section('title', 'S·∫£n ph·∫©m')

@section('content')
    <!-- Category Navigation Bar -->
    <div class="bg-white shadow-sm mb-6">
        <div class="container mx-auto px-4">
            <div class="flex items-center justify-between py-4">
                <!-- Categories -->
                <div class="flex space-x-6">
                    <button data-category="all" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">üìã</span>
                        <span>T·∫•t c·∫£</span>
                    </button>
                    <button data-category="phone" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">üì±</span>
                        <span>ƒêi·ªán tho·∫°i</span>
                    </button>
                    <button data-category="laptop" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">üíª</span>
                        <span>Laptop</span>
                    </button>
                    <button data-category="tablet" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">üì±</span>
                        <span>Tablet</span>
                    </button>
                    <button data-category="accessory" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">üéß</span>
                        <span>Ph·ª• ki·ªán</span>
                    </button>
                    <button data-category="watch" class="category-nav-btn text-gray-600 hover:text-blue-600 font-medium flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all">
                        <span class="text-xl">‚åö</span>
                        <span>ƒê·ªìng h·ªì</span>
                    </button>
                </div>

                <!-- Search Bar -->
                <div class="relative w-72">
                    <input type="text" 
                           id="nav-search-input"
                           placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..." 
                           class="w-full px-4 py-2 border border-gray-300 rounded-lg text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-300 focus:border-blue-300"
                    >
                    <button id="nav-search-btn" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-blue-600">
                        üîç
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Layout with Sidebar -->
    <div class="flex min-h-screen bg-gray-50">
        <!-- Main Content -->
        <main class="flex-1 p-8">
        <!-- Product List View -->
        <div id="product-list" class="fade-in">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-3xl font-bold text-gray-800">S·∫£n ph·∫©m n·ªïi b·∫≠t</h2>
                <div class="flex items-center space-x-4">
                    <select id="sort-select" class="px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300">
                        <option value="default">S·∫Øp x·∫øp theo gi√°</option>
                        <option value="price-low">Gi√° th·∫•p ƒë·∫øn cao</option>
                        <option value="price-high">Gi√° cao ƒë·∫øn th·∫•p</option>
                        <option value="newest">M·ªõi nh·∫•t</option>
                    </select>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                <!-- Product Card 1 -->
                <div class="product-card bg-white rounded-xl shadow-md overflow-hidden" data-product-id="1" data-category="phone" data-brand="apple" data-price="29990000">
                    <div class="relative">
                        <div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                            <span class="text-6xl">üì±</span>
                        </div>
                        <span class="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-full text-sm font-bold">-20%</span>
                    </div>
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800">iPhone 15 Pro Max</h3>
                        <p class="text-gray-600 text-sm mb-3">ƒêi·ªán tho·∫°i th√¥ng minh cao c·∫•p v·ªõi chip A17 Pro</p>
                        <div class="flex items-center justify-between mb-3">
                            <div>
                                <span class="text-2xl font-bold text-blue-600">29.990.000‚Ç´</span>
                                <span class="text-sm text-gray-500 line-through ml-2">37.490.000‚Ç´</span>
                            </div>
                        </div>
                        <div class="flex items-center mb-3">
                            <div class="flex text-yellow-400">
                                ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                            </div>
                            <span class="text-sm text-gray-600 ml-2">(128 ƒë√°nh gi√°)</span>
                        </div>
                        <button class="view-detail-btn w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-medium transition-colors">
                            Xem chi ti·∫øt
                        </button>
                    </div>
                </div>

                <!-- Product Card 2 -->
                <div class="product-card bg-white rounded-xl shadow-md overflow-hidden">
                    <div class="relative">
                        <div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                            <span class="text-6xl">üíª</span>
                        </div>
                        <span class="absolute top-2 right-2 bg-green-500 text-white px-2 py-1 rounded-full text-sm font-bold">M·ªõi</span>
                    </div>
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800">MacBook Air M3</h3>
                        <p class="text-gray-600 text-sm mb-3">Laptop si√™u m·ªèng v·ªõi chip M3 m·∫°nh m·∫Ω</p>
                        <div class="flex items-center justify-between mb-3">
                            <div>
                                <span class="text-2xl font-bold text-blue-600">28.990.000‚Ç´</span>
                            </div>
                        </div>
                        <div class="flex items-center mb-3">
                            <div class="flex text-yellow-400">
                                ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                            </div>
                            <span class="text-sm text-gray-600 ml-2">(89 ƒë√°nh gi√°)</span>
                        </div>
                        <button onclick="showProductDetail(2)" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-medium transition-colors">
                            Xem chi ti·∫øt
                        </button>
                    </div>
                </div>

                <!-- Product Card 3 -->
                <div class="product-card bg-white rounded-xl shadow-md overflow-hidden">
                    <div class="relative">
                        <div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                            <span class="text-6xl">üéß</span>
                        </div>
                    </div>
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800">AirPods Pro 2</h3>
                        <p class="text-gray-600 text-sm mb-3">Tai nghe kh√¥ng d√¢y ch·ªëng ·ªìn ch·ªß ƒë·ªông</p>
                        <div class="flex items-center justify-between mb-3">
                            <div>
                                <span class="text-2xl font-bold text-blue-600">6.490.000‚Ç´</span>
                            </div>
                        </div>
                        <div class="flex items-center mb-3">
                            <div class="flex text-yellow-400">
                                ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                            </div>
                            <span class="text-sm text-gray-600 ml-2">(256 ƒë√°nh gi√°)</span>
                        </div>
                        <button onclick="showProductDetail(3)" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-medium transition-colors">
                            Xem chi ti·∫øt
                        </button>
                    </div>
                </div>

                <!-- Product Card 4 -->
                <div class="product-card bg-white rounded-xl shadow-md overflow-hidden">
                    <div class="relative">
                        <div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center">
                            <span class="text-6xl">‚åö</span>
                        </div>
                        <span class="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-full text-sm font-bold">-15%</span>
                    </div>
                    <div class="p-4">
                        <h3 class="font-bold text-lg mb-2 text-gray-800">Apple Watch Series 9</h3>
                        <p class="text-gray-600 text-sm mb-3">ƒê·ªìng h·ªì th√¥ng minh v·ªõi t√≠nh nƒÉng s·ª©c kh·ªèe</p>
                        <div class="flex items-center justify-between mb-3">
                            <div>
                                <span class="text-2xl font-bold text-blue-600">9.990.000‚Ç´</span>
                                <span class="text-sm text-gray-500 line-through ml-2">11.990.000‚Ç´</span>
                            </div>
                        </div>
                        <div class="flex items-center mb-3">
                            <div class="flex text-yellow-400">
                                ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                            </div>
                            <span class="text-sm text-gray-600 ml-2">(167 ƒë√°nh gi√°)</span>
                        </div>
                        <button onclick="showProductDetail(4)" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg font-medium transition-colors">
                            Xem chi ti·∫øt
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Product Detail View -->
        <div id="product-detail" class="hidden fade-in">
            <div class="mb-4">
                <button onclick="showProductList()" class="text-blue-600 hover:text-blue-800 font-medium">
                    ‚Üê Quay l·∫°i danh s√°ch s·∫£n ph·∫©m
                </button>
            </div>

            <div class="bg-white rounded-xl shadow-lg overflow-hidden">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 p-8">
                    <!-- Product Images -->
                    <div>
                        <div class="mb-4">
                            <div id="main-image" class="w-full h-96 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center">
                                <span class="text-8xl">üì±</span>
                            </div>
                        </div>
                        <div class="flex space-x-2">
                            <div class="w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center cursor-pointer border-2 border-blue-500">
                                <span class="text-2xl">üì±</span>
                            </div>
                            <div class="w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center cursor-pointer">
                                <span class="text-2xl">üì±</span>
                            </div>
                            <div class="w-20 h-20 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg flex items-center justify-center cursor-pointer">
                                <span class="text-2xl">üì±</span>
                            </div>
                        </div>
                    </div>

                    <!-- Product Info -->
                    <div>
                        <h1 id="detail-title" class="text-3xl font-bold text-gray-800 mb-4">iPhone 15 Pro Max</h1>
                        
                        <div class="flex items-center mb-4">
                            <div class="flex text-yellow-400 text-lg">
                                ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
                            </div>
                            <span class="text-gray-600 ml-2">(128 ƒë√°nh gi√°)</span>
                            <span class="text-blue-600 ml-4 cursor-pointer hover:underline">Vi·∫øt ƒë√°nh gi√°</span>
                        </div>

                        <div class="mb-6">
                            <div class="flex items-center space-x-4 mb-2">
                                <span id="detail-price" class="text-4xl font-bold text-blue-600">29.990.000‚Ç´</span>
                                <span id="detail-old-price" class="text-xl text-gray-500 line-through">37.490.000‚Ç´</span>
                                <span class="bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">-20%</span>
                            </div>
                            <p class="text-green-600 font-medium">‚úì C√≤n h√†ng - Giao h√†ng mi·ªÖn ph√≠</p>
                        </div>

                        <div class="mb-6">
                            <h3 class="font-bold text-lg mb-3">M√†u s·∫Øc:</h3>
                            <div class="flex space-x-3">
                                <button class="w-12 h-12 rounded-full bg-gray-800 border-4 border-blue-500"></button>
                                <button class="w-12 h-12 rounded-full bg-blue-600 border-2 border-gray-300"></button>
                                <button class="w-12 h-12 rounded-full bg-purple-600 border-2 border-gray-300"></button>
                                <button class="w-12 h-12 rounded-full bg-yellow-400 border-2 border-gray-300"></button>
                            </div>
                        </div>

                        <div class="mb-6">
                            <h3 class="font-bold text-lg mb-3">Dung l∆∞·ª£ng:</h3>
                            <div class="flex space-x-3">
                                <button class="px-4 py-2 border-2 border-blue-500 bg-blue-50 text-blue-600 rounded-lg font-medium">256GB</button>
                                <button class="px-4 py-2 border-2 border-gray-300 text-gray-600 rounded-lg font-medium hover:border-blue-500">512GB</button>
                                <button class="px-4 py-2 border-2 border-gray-300 text-gray-600 rounded-lg font-medium hover:border-blue-500">1TB</button>
                            </div>
                        </div>

                        <div class="mb-6">
                            <h3 class="font-bold text-lg mb-3">S·ªë l∆∞·ª£ng:</h3>
                            <div class="flex items-center space-x-3">
                                <button onclick="decreaseQuantity()" class="quantity-btn w-10 h-10 bg-gray-200 hover:bg-gray-300 rounded-lg flex items-center justify-center font-bold">-</button>
                                <span id="quantity" class="text-xl font-bold px-4">1</span>
                                <button onclick="increaseQuantity()" class="quantity-btn w-10 h-10 bg-gray-200 hover:bg-gray-300 rounded-lg flex items-center justify-center font-bold">+</button>
                            </div>
                        </div>

                        <div class="space-y-4 mb-6">
                            <button onclick="purchaseNow()" class="w-full bg-orange-500 hover:bg-orange-600 text-white py-4 rounded-lg font-bold text-lg transition-colors flex items-center justify-center gap-2">
                                <span>üõí</span> Mua ngay
                            </button>
                            <div class="grid grid-cols-2 gap-4">
                                <button onclick="addToCartAndContinue()" class="bg-blue-600 hover:bg-blue-700 text-white py-3 rounded-lg font-bold transition-colors flex items-center justify-center gap-2">
                                    <span>‚ûï</span> Th√™m v√†o gi·ªè
                                </button>
                                <button onclick="addToCartAndCheckout()" class="bg-green-600 hover:bg-green-700 text-white py-3 rounded-lg font-bold transition-colors flex items-center justify-center gap-2">
                                    <span>‚úì</span> Th√™m v√† thanh to√°n
                                </button>
                            </div>
                        </div>

                        <!-- Purchase Success Modal -->
                        <div id="purchaseModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                            <div class="bg-white rounded-xl p-6 max-w-md w-full mx-4 relative">
                                <div id="purchaseModalContent" class="text-center">
                                    <!-- Content will be set by JavaScript -->
                                </div>
                            </div>
                        </div>

                        <div class="border-t pt-6">
                            <h3 class="font-bold text-lg mb-3">Th√¥ng tin s·∫£n ph·∫©m:</h3>
                            <ul class="space-y-2 text-gray-700">
                                <li>‚Ä¢ Chip A17 Pro 3nm ti√™n ti·∫øn</li>
                                <li>‚Ä¢ Camera ch√≠nh 48MP v·ªõi zoom quang h·ªçc 5x</li>
                                <li>‚Ä¢ M√†n h√¨nh Super Retina XDR 6.7 inch</li>
                                <li>‚Ä¢ Khung Titanium cao c·∫•p</li>
                                <li>‚Ä¢ H·ªó tr·ª£ s·∫°c kh√¥ng d√¢y MagSafe</li>
                                <li>‚Ä¢ Kh√°ng n∆∞·ªõc IP68</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product Tabs -->
            <div class="mt-8 bg-white rounded-xl shadow-lg overflow-hidden">
                <div class="border-b">
                    <div class="flex">
                        <button onclick="showTab(\'description\')" id="tab-description" class="px-6 py-4 font-medium border-b-2 border-blue-600 text-blue-600">
                            M√¥ t·∫£ s·∫£n ph·∫©m
                        </button>
                        <button onclick="showTab(\'specs\')" id="tab-specs" class="px-6 py-4 font-medium text-gray-600 hover:text-blue-600">
                            Th√¥ng s·ªë k·ªπ thu·∫≠t
                        </button>
                        <button onclick="showTab(\'reviews\')" id="tab-reviews" class="px-6 py-4 font-medium text-gray-600 hover:text-blue-600">
                            ƒê√°nh gi√° (128)
                        </button>
                    </div>
                </div>

                <div class="p-6">
                    <div id="tab-content-description">
                        <h3 class="text-xl font-bold mb-4">iPhone 15 Pro Max - ƒê·ªânh cao c√¥ng ngh·ªá</h3>
                        <p class="text-gray-700 leading-relaxed mb-4">
                            iPhone 15 Pro Max mang ƒë·∫øn tr·∫£i nghi·ªám ƒë·ªânh cao v·ªõi chip A17 Pro ƒë∆∞·ª£c s·∫£n xu·∫•t tr√™n ti·∫øn tr√¨nh 3nm ti√™n ti·∫øn nh·∫•t. 
                            Thi·∫øt k·∫ø khung Titanium cao c·∫•p v·ª´a nh·∫π v·ª´a b·ªÅn, k·∫øt h·ª£p c√πng m√†n h√¨nh Super Retina XDR 6.7 inch s·∫Øc n√©t.
                        </p>
                        <p class="text-gray-700 leading-relaxed">
                            H·ªá th·ªëng camera Pro v·ªõi c·∫£m bi·∫øn ch√≠nh 48MP v√† zoom quang h·ªçc 5x cho ph√©p b·∫°n ch·ª•p ·∫£nh chuy√™n nghi·ªáp. 
                            Pin l√¢u d√†i v√† s·∫°c nhanh gi√∫p b·∫°n lu√¥n k·∫øt n·ªëi su·ªët c·∫£ ng√†y.
                        </p>
                    </div>

                    <div id="tab-content-specs" class="hidden">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <h4 class="font-bold mb-3">Th√¥ng s·ªë chung</h4>
                                <ul class="space-y-2 text-gray-700">
                                    <li><strong>M√†n h√¨nh:</strong> 6.7 inch Super Retina XDR</li>
                                    <li><strong>Chip:</strong> A17 Pro 3nm</li>
                                    <li><strong>Dung l∆∞·ª£ng:</strong> 256GB/512GB/1TB</li>
                                    <li><strong>RAM:</strong> 8GB</li>
                                </ul>
                            </div>
                            <div>
                                <h4 class="font-bold mb-3">Camera & Pin</h4>
                                <ul class="space-y-2 text-gray-700">
                                    <li><strong>Camera sau:</strong> 48MP ch√≠nh + 12MP g√≥c r·ªông + 12MP tele</li>
                                    <li><strong>Camera tr∆∞·ªõc:</strong> 12MP TrueDepth</li>
                                    <li><strong>Pin:</strong> 4441 mAh</li>
                                    <li><strong>S·∫°c:</strong> 27W c√≥ d√¢y, 15W MagSafe</li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div id="tab-content-reviews" class="hidden">
                        <div class="space-y-6">
                            <div class="border-b pb-4">
                                <div class="flex items-center mb-2">
                                    <div class="flex text-yellow-400">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</div>
                                    <span class="font-bold ml-2">Nguy·ªÖn VƒÉn A</span>
                                    <span class="text-gray-500 ml-2">‚Ä¢ 2 ng√†y tr∆∞·ªõc</span>
                                </div>
                                <p class="text-gray-700">S·∫£n ph·∫©m r·∫•t tuy·ªát v·ªùi, camera ch·ª•p ·∫£nh ƒë·∫πp, pin tr√¢u. Giao h√†ng nhanh, ƒë√≥ng g√≥i c·∫©n th·∫≠n.</p>
                            </div>
                            <div class="border-b pb-4">
                                <div class="flex items-center mb-2">
                                    <div class="flex text-yellow-400">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</div>
                                    <span class="font-bold ml-2">Tr·∫ßn Th·ªã B</span>
                                    <span class="text-gray-500 ml-2">‚Ä¢ 1 tu·∫ßn tr∆∞·ªõc</span>
                                </div>
                                <p class="text-gray-700">M√°y ch·∫°y m∆∞·ª£t, thi·∫øt k·∫ø ƒë·∫πp. R·∫•t h√†i l√≤ng v·ªõi s·∫£n ph·∫©m n√†y!</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </main>
    </div>

    <!-- Footer -->
    <footer class="bg-gray-800 text-white mt-16">
        <div class="container mx-auto px-4 py-8">
            <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                <div>
                    <h3 class="font-bold text-lg mb-4">TechStore</h3>
                    <p class="text-gray-300">C·ª≠a h√†ng ƒëi·ªán t·ª≠ uy t√≠n v·ªõi s·∫£n ph·∫©m ch√≠nh h√£ng v√† d·ªãch v·ª• t·ªët nh·∫•t.</p>
                </div>
                <div>
                    <h4 class="font-bold mb-4">Li√™n k·∫øt</h4>
                    <ul class="space-y-2 text-gray-300">
                        <li><a href="#" class="hover:text-white">V·ªÅ ch√∫ng t√¥i</a></li>
                        <li><a href="#" class="hover:text-white">Ch√≠nh s√°ch b·∫£o h√†nh</a></li>
                        <li><a href="#" class="hover:text-white">H∆∞·ªõng d·∫´n mua h√†ng</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-bold mb-4">H·ªó tr·ª£</h4>
                    <ul class="space-y-2 text-gray-300">
                        <li><a href="#" class="hover:text-white">Li√™n h·ªá</a></li>
                        <li><a href="#" class="hover:text-white">FAQ</a></li>
                        <li><a href="#" class="hover:text-white">ƒê·ªïi tr·∫£</a></li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-bold mb-4">Theo d√µi</h4>
                    <div class="flex space-x-4">
                        <a href="#" class="text-2xl hover:text-blue-400">üìò</a>
                        <a href="#" class="text-2xl hover:text-pink-400">üì∑</a>
                        <a href="#" class="text-2xl hover:text-blue-300">üê¶</a>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <script defer>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Initializing product page...');
            initializePage();
        });

        // Core functionality
        function initializePage() {
            setupCategoryNavigation();
            setupSearch();
            setupProductCards();
        }

        // Category Navigation
        function setupCategoryNavigation() {
            const categoryButtons = document.querySelectorAll('.category-nav-btn');
            categoryButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const category = button.dataset.category;
                    setActiveCategory(button);
                    filterProductsByCategory(category);
                });
            });
        }

        function setActiveCategory(selectedButton) {
            // Remove active state from all buttons
            document.querySelectorAll('.category-nav-btn').forEach(btn => {
                btn.classList.remove('bg-blue-50', 'text-blue-600');
                btn.classList.add('text-gray-600');
            });

            // Add active state to selected button
            selectedButton.classList.add('bg-blue-50', 'text-blue-600');
            selectedButton.classList.remove('text-gray-600');
        }

        // Initialize when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing...');
            initializeProducts();
            setupEventListeners();
            setupNavigationBar();
        });

        // Product filtering and display
        function filterProductsByCategory(category) {
            const productCards = document.querySelectorAll('.product-card');
            const fadeOut = [
                { opacity: 1, transform: 'translateY(0)' },
                { opacity: 0, transform: 'translateY(-10px)' }
            ];
            const fadeIn = [
                { opacity: 0, transform: 'translateY(-10px)' },
                { opacity: 1, transform: 'translateY(0)' }
            ];
            const animationTiming = { duration: 300, easing: 'ease-out' };

            productCards.forEach(card => {
                if (category === 'all' || card.dataset.category === category) {
                    card.style.display = 'block';
                    card.animate(fadeIn, animationTiming);
                } else {
                    const animation = card.animate(fadeOut, animationTiming);
                    animation.onfinish = () => {
                        card.style.display = 'none';
                    };
                }
            });
        }

        // Purchase functionality
        function showPurchaseModal(title, message, type = 'success') {
            const modal = document.getElementById('purchaseModal');
            const content = document.getElementById('purchaseModalContent');
            
            let icon = type === 'success' ? '‚úÖ' : type === 'info' ? '‚ÑπÔ∏è' : '‚ùå';
            let color = type === 'success' ? 'text-green-600' : type === 'info' ? 'text-blue-600' : 'text-red-600';
            
            content.innerHTML = `
                <div class="text-4xl mb-4">${icon}</div>
                <h3 class="text-xl font-bold ${color} mb-2">${title}</h3>
                <p class="text-gray-600 mb-6">${message}</p>
                <div class="flex gap-3">
                    <button onclick="hidePurchaseModal()" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded-lg transition-colors">
                        ƒê√≥ng
                    </button>
                    ${type === 'success' ? `
                    <button onclick="window.location.href='/checkout'" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors">
                        ƒê·∫øn gi·ªè h√†ng
                    </button>
                    ` : ''}
                </div>
            `;
            
            modal.classList.remove('hidden');
            
            // Close modal when clicking outside
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    hidePurchaseModal();
                }
            });
        }

        function hidePurchaseModal() {
            const modal = document.getElementById('purchaseModal');
            modal.classList.add('hidden');
        }

        function purchaseNow() {
            const productTitle = document.querySelector('#detail-title').textContent;
            const quantity = document.querySelector('#quantity').textContent;
            showPurchaseModal(
                'ƒê·∫∑t h√†ng th√†nh c√¥ng!',
                `B·∫°n ƒë√£ ƒë·∫∑t mua ${quantity} ${productTitle}. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n ƒë·ªÉ x√°c nh·∫≠n ƒë∆°n h√†ng.`,
                'success'
            );
        }

        function addToCartAndContinue() {
            const productTitle = document.querySelector('#detail-title').textContent;
            showPurchaseModal(
                'ƒê√£ th√™m v√†o gi·ªè h√†ng',
                `${productTitle} ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng c·ªßa b·∫°n.`,
                'info'
            );
        }

        function addToCartAndCheckout() {
            const productTitle = document.querySelector('#detail-title').textContent;
            showPurchaseModal(
                'ƒê√£ th√™m v√†o gi·ªè h√†ng',
                `${productTitle} ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng. B·∫°n c√≥ th·ªÉ ti·∫øn h√†nh thanh to√°n ngay b√¢y gi·ªù.`,
                'success'
            );
        }

        // Product cards functionality
        function setupProductCards() {
            const productCards = document.querySelectorAll('.product-card');
            productCards.forEach(card => {
                const viewDetailBtn = card.querySelector('.view-detail-btn');
                if (viewDetailBtn) {
                    viewDetailBtn.addEventListener('click', () => {
                        const productId = card.dataset.productId;
                        showProductDetail(productId);
                    });
                }
            });
        }

        const products = {
            1: {
                title: "iPhone 15 Pro Max",
                price: "29.990.000‚Ç´",
                priceValue: 29990000,
                oldPrice: "37.490.000‚Ç´",
                emoji: "üì±",
                category: "phone",
                brand: "apple",
                priceRange: "over-20m",
                releaseDate: new Date(\'2023-09-22\')
            },
            2: {
                title: "MacBook Air M3",
                price: "28.990.000‚Ç´",
                priceValue: 28990000,
                oldPrice: null,
                emoji: "üíª",
                category: "laptop",
                brand: "apple",
                priceRange: "over-20m",
                releaseDate: new Date(\'2024-03-08\')
            },
            3: {
                title: "AirPods Pro 2",
                price: "6.490.000‚Ç´",
                priceValue: 6490000,
                oldPrice: null,
                emoji: "üéß",
                category: "accessory",
                brand: "apple",
                priceRange: "under-10m",
                releaseDate: new Date(\'2022-09-23\')
            },
            4: {
                title: "Apple Watch Series 9",
                price: "9.990.000‚Ç´",
                priceValue: 9990000,
                oldPrice: "11.990.000‚Ç´",
                emoji: "‚åö",
                category: "accessory",
                brand: "apple",
                priceRange: "under-10m",
                releaseDate: new Date(\'2023-09-22\')
            }
        };

        function setupNavigationBar() {
            // Category navigation
            $$('.category-nav-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    const category = btn.dataset.category;
                    filterByCategory(category);
                    setActiveCategory(category);
                });
            });

            // Navigation search
            $('#nav-search-input')?.addEventListener('keyup', (e) => {
                if (e.key === 'Enter') {
                    performNavSearch();
                }
            });

            $('#nav-search-btn')?.addEventListener('click', () => {
                performNavSearch();
            });
        }

        function performNavSearch() {
            const searchTerm = $('#nav-search-input')?.value.toLowerCase() || '';
            const productCards = $$('.product-card');

            let hasResults = false;
            productCards.forEach(card => {
                const title = card.querySelector('h3')?.textContent.toLowerCase() || '';
                const description = card.querySelector('p')?.textContent.toLowerCase() || '';
                
                if (title.includes(searchTerm) || description.includes(searchTerm) || searchTerm === '') {
                    card.style.display = 'block';
                    hasResults = true;
                } else {
                    card.style.display = 'none';
                }
            });

            // Show/hide no results message
            const noResults = $('#no-results');
            if (noResults) {
                noResults.style.display = hasResults ? 'none' : 'block';
            }

            // Reset category filters
            if (searchTerm) {
                setActiveCategory('all');
            }
        }

        function setupEventListeners() {
            console.log('Setting up event listeners...');
            
            // Category filters in sidebar
            $$('.sidebar-category').forEach(button => {
                button.addEventListener('click', (e) => {
                    e.preventDefault();
                    const category = button.dataset.category;
                    filterByCategory(category);
                    setActiveCategory(category);
                    console.log('Category filter clicked:', category);
                });
            });

            // Price filters
            $$('[data-price-range]').forEach(checkbox => {
                checkbox.addEventListener('change', (e) => {
                    const range = checkbox.dataset.priceRange;
                    filterByPrice(range);
                    console.log('Price filter changed:', range);
                });
            });

            // Brand filters
            $$('[data-brand]').forEach(checkbox => {
                checkbox.addEventListener('change', (e) => {
                    const brand = checkbox.dataset.brand;
                    filterByBrand(brand);
                    console.log('Brand filter changed:', brand);
                });
            });

            // Search functionality
            const searchInput = $('#search-input');
            if (searchInput) {
                searchInput.addEventListener('keyup', (e) => {
                    if (e.key === 'Enter') {
                        performSearch();
                    }
                });
            }

            // Product cards click handlers
            $$('.product-card').forEach(card => {
                const productId = card.dataset.productId;
                if (productId) {
                    card.querySelector('.view-detail-btn')?.addEventListener('click', () => {
                        showProductDetail(productId);
                    });
                }
            });

            // Quantity buttons
            setupQuantityControls();
            
            // Sort dropdown
            $('#sort-select')?.addEventListener('change', (e) => {
                sortProducts(e.target.value);
            });
        }

        function initializeProducts() {
            console.log('Initializing products...');

            // Initialize search
            const searchInput = document.getElementById('search-input');
            if (searchInput) {
                searchInput.addEventListener('keyup', searchProducts);
            }

            // Initialize quantity buttons
            const quantityBtns = document.querySelectorAll('.quantity-btn');
            quantityBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    if (this.textContent === '+') {
                        increaseQuantity();
                    } else {
                        decreaseQuantity();
                    }
                });
            });

            // Show initial product list
            showProductList();
        }

        function showProductList() {
            const productList = document.getElementById('product-list');
            const productDetail = document.getElementById('product-detail');
            
            if (productList && productDetail) {
                productList.classList.remove('hidden');
                productDetail.classList.add('hidden');
            }
        }

        function showProductDetail(productId) {
            const product = products[productId];
            
            document.getElementById(\'detail-title\').textContent = product.title;
            document.getElementById(\'detail-price\').textContent = product.price;
            document.getElementById(\'main-image\').innerHTML = `<span class="text-8xl">${product.emoji}</span>`;
            
            const oldPriceElement = document.getElementById(\'detail-old-price\');
            if (product.oldPrice) {
                oldPriceElement.textContent = product.oldPrice;
                oldPriceElement.classList.remove(\'hidden\');
            } else {
                oldPriceElement.classList.add(\'hidden\');
            }
            
            document.getElementById(\'product-list\').classList.add(\'hidden\');
            document.getElementById(\'product-detail\').classList.remove(\'hidden\');
            
            // Reset quantity
            currentQuantity = 1;
            document.getElementById(\'quantity\').textContent = currentQuantity;
        }

        function increaseQuantity() {
            if (currentQuantity < 10) {
                currentQuantity++;
                document.getElementById(\'quantity\').textContent = currentQuantity;
            }
        }

        function decreaseQuantity() {
            if (currentQuantity > 1) {
                currentQuantity--;
                document.getElementById(\'quantity\').textContent = currentQuantity;
            }
        }

        function addToCart() {
            cartCount += currentQuantity;
            document.getElementById(\'cart-count\').textContent = cartCount;
            
            // Show success message
            const button = event.target;
            const originalText = button.textContent;
            button.textContent = \'ƒê√£ th√™m v√†o gi·ªè h√†ng!\';
            button.classList.add(\'bg-green-600\');
            button.classList.remove(\'bg-blue-600\');
            
            setTimeout(() => {
                button.textContent = originalText;
                button.classList.remove(\'bg-green-600\');
                button.classList.add(\'bg-blue-600\');
            }, 2000);
        }

        function showTab(tabName) {
            // Hide all tab contents
            document.getElementById(\'tab-content-description\').classList.add(\'hidden\');
            document.getElementById(\'tab-content-specs\').classList.add(\'hidden\');
            document.getElementById(\'tab-content-reviews\').classList.add(\'hidden\');
            
            // Remove active state from all tabs
            document.getElementById(\'tab-description\').classList.remove(\'border-blue-600\', \'text-blue-600\');
            document.getElementById(\'tab-specs\').classList.remove(\'border-blue-600\', \'text-blue-600\');
            document.getElementById(\'tab-reviews\').classList.remove(\'border-blue-600\', \'text-blue-600\');
            
            document.getElementById(\'tab-description\').classList.add(\'text-gray-600\');
            document.getElementById(\'tab-specs\').classList.add(\'text-gray-600\');
            document.getElementById(\'tab-reviews\').classList.add(\'text-gray-600\');
            
            // Show selected tab content and activate tab
            document.getElementById(\'tab-content-\' + tabName).classList.remove(\'hidden\');
            document.getElementById(\'tab-\' + tabName).classList.add(\'border-blue-600\', \'text-blue-600\');
            document.getElementById(\'tab-\' + tabName).classList.remove(\'text-gray-600\');
        }

        function filterByCategory(category) {
            currentFilter = category;
            updateSidebarActive(category);
            filterProducts();
        }

        function filterByPrice(priceRange) {
            const index = currentPriceFilters.indexOf(priceRange);
            if (index > -1) {
                currentPriceFilters.splice(index, 1);
            } else {
                currentPriceFilters.push(priceRange);
            }
            filterProducts();
        }

        function filterByBrand(brand) {
            const index = currentBrandFilters.indexOf(brand);
            if (index > -1) {
                currentBrandFilters.splice(index, 1);
            } else {
                currentBrandFilters.push(brand);
            }
            filterProducts();
        }

        function updateSidebarActive(activeCategory) {
            // Remove active state from all buttons
            const buttons = document.querySelectorAll(\'aside button\');
            buttons.forEach(btn => {
                btn.classList.remove(\'bg-blue-50\', \'text-blue-600\', \'border-l-4\', \'border-blue-600\');
                btn.classList.add(\'text-gray-600\');
            });

            // Add active state to selected button
            const activeButton = document.querySelector(`button[onclick*="${activeCategory}"]`) || 
                                document.querySelector(\'button[onclick="showProductList()"]\');
            if (activeButton) {
                activeButton.classList.add(\'bg-blue-50\', \'text-blue-600\', \'border-l-4\', \'border-blue-600\');
                activeButton.classList.remove(\'text-gray-600\');
            }
        }

        function filterProducts() {
            try {
                const productCards = document.querySelectorAll('.product-card');
                if (!productCards.length) {
                    console.error('No product cards found');
                    return;
                }

                let hasVisibleProducts = false;
                
                // Animation setup
                const fadeOut = [
                    { opacity: 1, transform: 'translateY(0)' },
                    { opacity: 0, transform: 'translateY(-10px)' }
                ];
                const fadeIn = [
                    { opacity: 0, transform: 'translateY(-10px)' },
                    { opacity: 1, transform: 'translateY(0)' }
                ];
                const animationTiming = {
                    duration: 300,
                    easing: 'ease-out'
                };            productCards.forEach((card, index) => {
                const productId = index + 1;
                const product = products[productId];
                let shouldShow = true;

                // Category filter
                if (currentFilter !== \'all\' && product.category !== currentFilter) {
                    shouldShow = false;
                }

                // Price filter
                if (currentPriceFilters.length > 0 && !currentPriceFilters.includes(product.priceRange)) {
                    shouldShow = false;
                }

                // Brand filter
                if (currentBrandFilters.length > 0 && !currentBrandFilters.includes(product.brand)) {
                    shouldShow = false;
                }

                // Show/hide product with animation
                if (shouldShow) {
                    card.style.display = 'block';
                    card.animate(fadeIn, animationTiming);
                } else {
                    card.animate(fadeOut, animationTiming).onfinish = () => {
                        card.style.display = 'none';
                    };
                }
            });
        }

        function searchProducts(event) {
            try {
                if (event.key === 'Enter') {
                    performSearch();
                }
            } catch (error) {
                console.error('Error in search products:', error);
            }
        }

        function performSearch() {
            try {
                const searchInput = document.getElementById('search-input');
                if (!searchInput) {
                    console.error('Search input not found');
                    return;
                }

                const searchTerm = searchInput.value.toLowerCase();
                const productCards = document.querySelectorAll('.product-card');
            
            productCards.forEach((card, index) => {
                const productId = index + 1;
                const product = products[productId];
                const productTitle = product.title.toLowerCase();
                
                if (productTitle.includes(searchTerm) || searchTerm === \'\') {
                    card.style.display = \'block\';
                } else {
                    card.style.display = \'none\';
                }
            });
        }

        function showCart() {
            // Create cart modal
            const modal = document.createElement(\'div\');
            modal.className = \'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\';
            
            const cartContent = cartCount === 0 ? 
                \'Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng!\' : 
                `B·∫°n c√≥ ${cartCount} s·∫£n ph·∫©m trong gi·ªè h√†ng`;
                
            modal.innerHTML = `
                <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
                    <h3 class="text-xl font-bold mb-4">Gi·ªè h√†ng c·ªßa b·∫°n</h3>
                    <p class="text-gray-600 mb-4">${cartContent}</p>
                    <div class="flex space-x-3">
                        <button onclick="closeModal()" 
                                class="flex-1 bg-gray-500 hover:bg-gray-600 text-white py-2 rounded-lg">
                            ƒê√≥ng
                        </button>
                        ${cartCount > 0 ? `
                        <button onclick="checkout()" 
                                class="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 rounded-lg">
                            Thanh to√°n
                        </button>` : \'\'}
                    </div>
                </div>
            `;
            document.body.appendChild(modal);
        }

        function closeModal() {
            const modal = document.querySelector(\'.fixed.inset-0\');
            if (modal) {
                modal.remove();
            }
        }

        function checkout() {
            // Create checkout notification
            const notification = document.createElement(\'div\');
            notification.className = \'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50\';
            notification.textContent = \'Ch·ª©c nƒÉng thanh to√°n ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn!\';
            document.body.appendChild(notification);
            
            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.remove();
            }, 3000);
            
            closeModal();
        }

        function sortProducts(sortType) {
            const productGrid = document.querySelector(\'.grid.grid-cols-1.md\\:grid-cols-2.lg\\:grid-cols-3.xl\\:grid-cols-4\');
            const productCards = Array.from(productGrid.children);
            
            // Create array of products with their data and DOM elements
            const productsWithElements = productCards.map((card, index) => {
                const productId = index + 1;
                return {
                    element: card,
                    data: products[productId],
                    id: productId
                };
            });

            // Sort based on selected option
            let sortedProducts;
            switch(sortType) {
                case \'price-low\':
                    sortedProducts = productsWithElements.sort((a, b) => a.data.priceValue - b.data.priceValue);
                    break;
                case \'price-high\':
                    sortedProducts = productsWithElements.sort((a, b) => b.data.priceValue - a.data.priceValue);
                    break;
                case \'newest\':
                    sortedProducts = productsWithElements.sort((a, b) => b.data.releaseDate - a.data.releaseDate);
                    break;
                default:
                    // Default order (original order)
                    sortedProducts = productsWithElements.sort((a, b) => a.id - b.id);
            }

            // Clear the grid and re-append in sorted order
            productGrid.innerHTML = \'\';
            sortedProducts.forEach(product => {
                productGrid.appendChild(product.element);
            });
        }
    </script>
@endsection