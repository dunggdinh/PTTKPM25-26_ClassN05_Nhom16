@extends('customer.layout')
@section('title', 'ƒê∆°n h√†ng')

@section('content')
<div class="bg-gradient-to-br from-blue-50 to-indigo-100">
    <main class="container mx-auto px-4 py-8 max-w-6xl">
        <!-- Header -->
        <header class="mb-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">ƒê∆°n H√†ng C·ªßa T√¥i</h1>
            <p class="text-gray-600">Theo d√µi v√† qu·∫£n l√Ω c√°c ƒë∆°n h√†ng c·ªßa b·∫°n</p>
        </header>

        <!-- Filter Tabs -->
        <div class="bg-white rounded-lg shadow-sm mb-6 p-1">
            <div class="flex flex-wrap gap-1">
                <button onclick="filterOrders('all')" class="filter-btn active px-4 py-2 rounded-md text-sm font-medium transition-colors bg-blue-500 text-white">
                    T·∫•t c·∫£ (4)
                </button>
                <button onclick="filterOrders('processing')" class="filter-btn px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-600 hover:bg-gray-100">
                    ƒêang x·ª≠ l√Ω (1)
                </button>
                <button onclick="filterOrders('shipping')" class="filter-btn px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-600 hover:bg-gray-100">
                    ƒêang giao (2)
                </button>
                <button onclick="filterOrders('delivered')" class="filter-btn px-4 py-2 rounded-md text-sm font-medium transition-colors text-gray-600 hover:bg-gray-100">
                    ƒê√£ giao (1)
                </button>
            </div>
        </div>

        <!-- Orders List -->
        <div class="space-y-6" id="ordersList">
            <!-- Order 1 - Processing -->
            <div class="order-card bg-white rounded-xl shadow-sm border border-gray-200 p-6" data-status="processing">
                <div class="flex flex-col lg:flex-row lg:items-center justify-between mb-4">
                    <div class="flex items-center gap-4 mb-4 lg:mb-0">
                        <div class="bg-blue-100 p-3 rounded-lg">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                            </svg>
                        </div>
                        <div>
                            <h3 class="font-semibold text-gray-800">ƒê∆°n h√†ng #DH001234</h3>
                            <p class="text-sm text-gray-500">ƒê·∫∑t ng√†y: 15/12/2024</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3">
                        <span class="status-badge bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm font-medium">
                            üîÑ ƒêang x·ª≠ l√Ω
                        </span>
                        <span class="text-lg font-bold text-gray-800">2.450.000‚Ç´</span>
                    </div>
                </div>

                <div class="grid md:grid-cols-2 gap-4 mb-4">
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Crect x='15' y='15' width='30' height='30' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='12'%3EiPhone%3C/text%3E%3C/svg%3E" alt="iPhone 15 Pro" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">iPhone 15 Pro 256GB</h4>
                            <p class="text-sm text-gray-500">M√†u: Titan T·ª± Nhi√™n</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Crect x='10' y='20' width='40' height='20' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='10'%3EAirPods%3C/text%3E%3C/svg%3E" alt="AirPods Pro" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">AirPods Pro (Gen 2)</h4>
                            <p class="text-sm text-gray-500">M√†u: Tr·∫Øng</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                </div>

                <div class="flex flex-col sm:flex-row gap-3">
                    <button onclick="viewOrderDetails('DH001234')" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Xem chi ti·∫øt
                    </button>
                    <button onclick="cancelOrder('DH001234')" class="flex-1 bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        H·ªßy ƒë∆°n h√†ng
                    </button>
                </div>
            </div>

            <!-- Order 2 - Shipping -->
            <div class="order-card bg-white rounded-xl shadow-sm border border-gray-200 p-6" data-status="shipping">
                <div class="flex flex-col lg:flex-row lg:items-center justify-between mb-4">
                    <div class="flex items-center gap-4 mb-4 lg:mb-0">
                        <div class="bg-green-100 p-3 rounded-lg">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div>
                            <h3 class="font-semibold text-gray-800">ƒê∆°n h√†ng #DH001235</h3>
                            <p class="text-sm text-gray-500">ƒê·∫∑t ng√†y: 12/12/2024</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3">
                        <span class="status-badge bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                            üöö ƒêang giao h√†ng
                        </span>
                        <span class="text-lg font-bold text-gray-800">1.890.000‚Ç´</span>
                    </div>
                </div>

                <div class="grid md:grid-cols-1 gap-4 mb-4">
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Crect x='5' y='15' width='50' height='30' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='10'%3EMacBook%3C/text%3E%3C/svg%3E" alt="MacBook Air" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">MacBook Air M2 13" 256GB</h4>
                            <p class="text-sm text-gray-500">M√†u: X√°m Kh√¥ng Gian</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                </div>

                <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                    <div class="flex items-center gap-2 mb-2">
                        <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span class="text-sm font-medium text-blue-800">Th√¥ng tin v·∫≠n chuy·ªÉn</span>
                    </div>
                    <p class="text-sm text-blue-700">ƒê∆°n h√†ng ƒëang tr√™n ƒë∆∞·ªùng giao ƒë·∫øn b·∫°n. D·ª± ki·∫øn giao: 17/12/2024</p>
                    <p class="text-sm text-blue-600 font-medium">M√£ v·∫≠n ƒë∆°n: VD123456789</p>
                </div>

                <div class="flex flex-col sm:flex-row gap-3">
                    <button onclick="trackOrder('VD123456789')" class="flex-1 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Theo d√µi ƒë∆°n h√†ng
                    </button>
                    <button onclick="viewOrderDetails('DH001235')" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Xem chi ti·∫øt
                    </button>
                </div>
            </div>

            <!-- Order 3 - Shipping -->
            <div class="order-card bg-white rounded-xl shadow-sm border border-gray-200 p-6" data-status="shipping">
                <div class="flex flex-col lg:flex-row lg:items-center justify-between mb-4">
                    <div class="flex items-center gap-4 mb-4 lg:mb-0">
                        <div class="bg-orange-100 p-3 rounded-lg">
                            <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div>
                            <h3 class="font-semibold text-gray-800">ƒê∆°n h√†ng #DH001236</h3>
                            <p class="text-sm text-gray-500">ƒê·∫∑t ng√†y: 10/12/2024</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3">
                        <span class="status-badge bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">
                            üöö ƒêang giao h√†ng
                        </span>
                        <span class="text-lg font-bold text-gray-800">850.000‚Ç´</span>
                    </div>
                </div>

                <div class="grid md:grid-cols-2 gap-4 mb-4">
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Ccircle cx='30' cy='30' r='20' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='10'%3EWatch%3C/text%3E%3C/svg%3E" alt="Apple Watch" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">Apple Watch Series 9</h4>
                            <p class="text-sm text-gray-500">M√†u: H·ªìng, D√¢y Sport</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Crect x='15' y='20' width='30' height='20' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='8'%3ECharger%3C/text%3E%3C/svg%3E" alt="Charger" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">S·∫°c MagSafe 15W</h4>
                            <p class="text-sm text-gray-500">M√†u: Tr·∫Øng</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                </div>

                <div class="flex flex-col sm:flex-row gap-3">
                    <button onclick="trackOrder('VD123456790')" class="flex-1 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Theo d√µi ƒë∆°n h√†ng
                    </button>
                    <button onclick="viewOrderDetails('DH001236')" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Xem chi ti·∫øt
                    </button>
                </div>
            </div>

            <!-- Order 4 - Delivered -->
            <div class="order-card bg-white rounded-xl shadow-sm border border-gray-200 p-6" data-status="delivered">
                <div class="flex flex-col lg:flex-row lg:items-center justify-between mb-4">
                    <div class="flex items-center gap-4 mb-4 lg:mb-0">
                        <div class="bg-green-100 p-3 rounded-lg">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                        </div>
                        <div>
                            <h3 class="font-semibold text-gray-800">ƒê∆°n h√†ng #DH001237</h3>
                            <p class="text-sm text-gray-500">ƒê·∫∑t ng√†y: 05/12/2024</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-3">
                        <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">
                            ‚úÖ ƒê√£ giao h√†ng
                        </span>
                        <span class="text-lg font-bold text-gray-800">1.200.000‚Ç´</span>
                    </div>
                </div>

                <div class="grid md:grid-cols-1 gap-4 mb-4">
                    <div class="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
                        <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23e5e7eb'/%3E%3Crect x='10' y='15' width='40' height='30' fill='%23374151'/%3E%3Ctext x='30' y='35' text-anchor='middle' fill='white' font-size='10'%3EiPad%3C/text%3E%3C/svg%3E" alt="iPad" class="w-15 h-15 rounded-lg object-cover">
                        <div class="flex-1">
                            <h4 class="font-medium text-gray-800">iPad Air 10.9" 64GB WiFi</h4>
                            <p class="text-sm text-gray-500">M√†u: Xanh D∆∞∆°ng</p>
                            <p class="text-sm text-gray-500">S·ªë l∆∞·ª£ng: 1</p>
                        </div>
                    </div>
                </div>

                <div class="bg-green-50 border border-green-200 rounded-lg p-3 mb-4">
                    <div class="flex items-center gap-2 mb-2">
                        <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        <span class="text-sm font-medium text-green-800">ƒê√£ giao th√†nh c√¥ng</span>
                    </div>
                    <p class="text-sm text-green-700">Giao h√†ng th√†nh c√¥ng ng√†y 08/12/2024 l√∫c 14:30</p>
                </div>

                <div class="flex flex-col sm:flex-row gap-3">
                    <button onclick="reviewProduct('DH001237')" class="flex-1 bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        ‚≠ê ƒê√°nh gi√° s·∫£n ph·∫©m
                    </button>
                    <button onclick="reorderProduct('DH001237')" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Mua l·∫°i
                    </button>
                    <button onclick="viewOrderDetails('DH001237')" class="flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        Xem chi ti·∫øt
                    </button>
                </div>
            </div>
        </div>

        <!-- Empty State (hidden by default) -->
        <div id="emptyState" class="hidden text-center py-12">
            <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-8">
                <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                    </svg>
                </div>
                <h3 class="text-lg font-medium text-gray-800 mb-2">Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o</h3>
                <p class="text-gray-500 mb-6">B·∫°n ch∆∞a c√≥ ƒë∆°n h√†ng n√†o trong danh m·ª•c n√†y</p>
                <button onclick="window.open('https://example.com/shop', '_blank')" class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                    Ti·∫øp t·ª•c mua s·∫Øm
                </button>
            </div>
        </div>
    </main>
</div>


<!-- Order Details Modal -->
<div id="orderModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
        <div class="bg-white rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
            <div class="p-6 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h2 class="text-xl font-bold text-gray-800">Chi ti·∫øt ƒë∆°n h√†ng</h2>
                    <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="p-6" id="modalContent">
                <!-- Content will be populated by JavaScript -->
            </div>
        </div>
    </div>

    <script>

        // ==== SAMPLE ORDER DATA (ƒë·ªÉ demo "Xem chi ti·∫øt" & "Mua l·∫°i") ====
        const ORDER_DETAILS = {
            'DH001234': {
                id: 'DH001234',
                date: '15/12/2024',
                status: 'ƒêang x·ª≠ l√Ω',
                total: '2.450.000‚Ç´',
                address: '123 Nguy·ªÖn VƒÉn Linh, Qu·∫≠n 7, TP.HCM',
                phone: '0901234567',
                items: [
                { name: 'iPhone 15 Pro 256GB', price: '29.990.000‚Ç´', qty: 1, variant: {color: 'Titan T·ª± Nhi√™n'} },
                { name: 'AirPods Pro (Gen 2)',  price: '6.490.000‚Ç´',  qty: 1, variant: {color: 'Tr·∫Øng'} }
                ]
            },
            'DH001235': {
                id: 'DH001235',
                date: '12/12/2024',
                status: 'ƒêang giao h√†ng',
                total: '1.890.000‚Ç´',
                address: '12 L√Ω Th∆∞·ªùng Ki·ªát, Q10, TP.HCM',
                phone: '0900000001',
                items: [
                { name: 'MacBook Air M2 13" 256GB', price: '27.990.000‚Ç´', qty: 1, variant: {color: 'X√°m Kh√¥ng Gian'} }
                ]
            },
            'DH001236': {
                id: 'DH001236',
                date: '10/12/2024',
                status: 'ƒêang giao h√†ng',
                total: '850.000‚Ç´',
                address: '78 ƒêinh Ti√™n Ho√†ng, Q1, TP.HCM',
                phone: '0900000002',
                items: [
                { name: 'Apple Watch Series 9', price: '10.990.000‚Ç´', qty: 1, variant: {color:'H·ªìng'} },
                { name: 'S·∫°c MagSafe 15W',     price: '1.290.000‚Ç´',  qty: 1, variant: {color:'Tr·∫Øng'} }
                ]
            },
            'DH001237': {
                id: 'DH001237',
                date: '05/12/2024',
                status: 'ƒê√£ giao h√†ng',
                total: '1.200.000‚Ç´',
                address: '45 V√µ VƒÉn Ng√¢n, TP. Th·ªß ƒê·ª©c',
                phone: '0900000003',
                items: [
                { name: 'iPad Air 10.9" 64GB WiFi', price: '13.990.000‚Ç´', qty: 1, variant: {color:'Xanh D∆∞∆°ng'} }
                ]
            },
        };

        // ==== CART HELPERS (ƒë·ªìng b·ªô v·ªõi trang gi·ªè) ====
        function parseVND(str) {
            if (typeof str === 'number') return str;
                return Number(String(str).replace(/[^\d]/g, '')) || 0;
            }

        function slugify(str='') {
            return String(str)
                .normalize('NFKD').replace(/[\u0300-\u036f]/g, '')
                .toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
        }
        function buildSkuKey(name, variant = {}) {
            const n = slugify(name||'');
            const storage = slugify(variant?.storage||'');
            const color = slugify(variant?.color||'');
            return [n, storage, color].join('|');
        }

        function getCartArray() {
            try { return JSON.parse(localStorage.getItem('cart')||'[]'); } catch { return []; }
        }
        function saveCartArray(arr) {
            localStorage.setItem('cart', JSON.stringify(arr));
        }

        // H·ª£p nh·∫•t item v√†o m·∫£ng cart (g·ªôp theo SKU)
        function upsertCartItem(cartArr, {name, price, qty=1, variant={}, image='default'}) {
            const key = buildSkuKey(name, variant);
            const idx = cartArr.findIndex(x => buildSkuKey(x.name, x.variant||{}) === key);
            if (idx === -1) {
                cartArr.push({
                id: key,
                name,
                price: Number(price) || 0,
                quantity: Number(qty) || 1,
                image,
                selected: true,
                variant: { storage: variant?.storage||'', color: variant?.color||'' }
                });
            } else {
                cartArr[idx].quantity = Number(cartArr[idx].quantity||0) + (Number(qty)||1);
                cartArr[idx].price = Number(price) || cartArr[idx].price; // gi·ªØ gi√° m·ªõi nh·∫•t
                cartArr[idx].selected = true;
            }
        }

        function toast(msg, type='success') {
            const el = document.createElement('div');
            el.className = `fixed top-4 right-4 z-[9999] px-4 py-2 rounded-lg text-white ${type==='success'?'bg-green-500':'bg-red-500'}`;
            el.textContent = msg;
            document.body.appendChild(el);
            setTimeout(()=>el.remove(), 2500);
        }


        document.addEventListener('DOMContentLoaded', function() {
            // Add event listeners for modal
            const modal = document.getElementById('orderModal');
            if (modal) {
                modal.addEventListener('click', function(e) {
                    if (e.target === this) {
                        closeModal();
                    }
                });
            }
        });

        function filterOrders(status) {
            const orders = document.querySelectorAll('.order-card');
            const filterBtns = document.querySelectorAll('.filter-btn');
            const emptyState = document.getElementById('emptyState');
            
            // Update active button
            filterBtns.forEach(btn => {
                btn.classList.remove('active', 'bg-blue-500', 'text-white');
                btn.classList.add('text-gray-600', 'hover:bg-gray-100');
            });
            event.target.classList.add('active', 'bg-blue-500', 'text-white');
            event.target.classList.remove('text-gray-600', 'hover:bg-gray-100');
            
            let visibleCount = 0;
            
            orders.forEach(order => {
                if (status === 'all' || order.dataset.status === status) {
                    order.style.display = 'block';
                    visibleCount++;
                } else {
                    order.style.display = 'none';
                }
            });
            
            // Show/hide empty state
            if (visibleCount === 0) {
                emptyState.classList.remove('hidden');
            } else {
                emptyState.classList.add('hidden');
            }
        }

        function viewOrderDetails(orderId) {
            const modal = document.getElementById('orderModal');
            const modalContent = document.getElementById('modalContent');
            const order = ORDER_DETAILS[orderId] || ORDER_DETAILS['DH001234'];

            const computedTotal = formatVND(sumOrderItems(order));

            modal.classList.remove('hidden');
            modalContent.innerHTML = `
                <div class="space-y-6">
                <div class="grid md:grid-cols-2 gap-6">
                    <div>
                    <h3 class="font-semibold text-gray-800 mb-3">Th√¥ng tin ƒë∆°n h√†ng</h3>
                    <div class="space-y-2 text-sm">
                        <p><span class="text-gray-500">M√£ ƒë∆°n h√†ng:</span> ${order.id}</p>
                        <p><span class="text-gray-500">Ng√†y ƒë·∫∑t:</span> ${order.date}</p>
                        <p><span class="text-gray-500">Tr·∫°ng th√°i:</span> <span class="text-blue-600 font-medium">${order.status}</span></p>
                        <p><span class="text-gray-500">T·ªïng ti·ªÅn:</span> <span class="font-bold text-lg">${computedTotal}</span></p>
                    </div>
                    </div>
                    <div>
                    <h3 class="font-semibold text-gray-800 mb-3">Th√¥ng tin giao h√†ng</h3>
                    <div class="space-y-2 text-sm">
                        <p><span class="text-gray-500">ƒê·ªãa ch·ªâ:</span> ${order.address}</p>
                        <p><span class="text-gray-500">S·ªë ƒëi·ªán tho·∫°i:</span> ${order.phone}</p>
                        <p><span class="text-gray-500">Ph∆∞∆°ng th·ª©c:</span> Giao h√†ng ti√™u chu·∫©n</p>
                    </div>
                    </div>
                </div>

                <div>
                    <h3 class="font-semibold text-gray-800 mb-3">S·∫£n ph·∫©m ƒë√£ ƒë·∫∑t</h3>
                    <div class="space-y-3">
                    ${order.items.map(item => `
                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                        <div>
                            <p class="font-medium">${item.name}</p>
                            <p class="text-sm text-gray-500">
                            S·ªë l∆∞·ª£ng: ${item.qty}
                            ${item?.variant?.color ? ` ‚Ä¢ M√†u: ${item.variant.color}` : ''}
                            </p>
                        </div>
                        <p class="font-medium">${formatVND(parseVND(item.price))}</p>
                        </div>
                    `).join('')}
                    </div>
                </div>
                </div>
            `;

            // Sau khi m·ªü modal c≈©ng sync l·∫°i card ngo√†i (ph√≤ng khi d·ªØ li·ªáu ƒë√£ ƒë·ªïi)
            syncOrderCardFromDetails(order.id);
            }


        function closeModal() {
            const modal = document.getElementById('orderModal');
            const modalContent = modal.querySelector('.bg-white');
            modalContent.classList.remove('modal-show');
            modalContent.classList.add('modal-hide');
            
            // Wait for animation to finish before hiding modal
            setTimeout(() => {
                modal.classList.add('hidden');
                modalContent.classList.remove('modal-hide');
            }, 300);
        }

        function cancelOrder(orderId) {
            if (!confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a (·∫©n) ƒë∆°n h√†ng ${orderId}?`)) return;

            // C·∫≠p nh·∫≠t UI th·∫ª ƒë∆°n t∆∞∆°ng ·ª©ng
            const card = [...document.querySelectorAll('.order-card')]
                .find(el => el.querySelector('h3')?.textContent?.includes(`#${orderId}`));
            if (!card) { alert('Kh√¥ng t√¨m th·∫•y th·∫ª ƒë∆°n h√†ng tr√™n trang.'); return; }

            // ƒê·ªïi badge tr·∫°ng th√°i
            const badge = card.querySelector('.status-badge');
            if (badge) {
                badge.textContent = 'üóëÔ∏è ƒê√£ xo√°';
                badge.className = 'status-badge px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-600';
            }

            // √Åp class m·ªù to√†n card + v√¥ hi·ªáu n√∫t "H·ªßy ƒë∆°n h√†ng"
            card.classList.add('order-deleted');
            const cancelBtn = [...card.querySelectorAll('button')].find(b=>b.textContent?.trim().includes('H·ªßy ƒë∆°n h√†ng'));
            if (cancelBtn) {
                cancelBtn.disabled = true;
                cancelBtn.classList.add('opacity-60','cursor-not-allowed');
            }

            toast(`ƒê∆°n h√†ng ${orderId} ƒë√£ ƒë∆∞·ª£c xo√° (·∫©n).`, 'success');
        }


        function trackOrder(trackingId) {
            // m·ªü/scroll t·ªõi panel theo d√µi v√† ƒë·∫£m b·∫£o ƒë√£ b·∫≠t realtime
            startLiveTracking(trackingId);
            // cu·ªôn ƒë·∫øn card ch·ª©a trackingId
            const card = [...document.querySelectorAll('.order-card')]
                .find(el => el.innerText.includes(trackingId));
            if (card) card.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }


        // ==== BASE URL trang review (Blade s·∫Ω render URL ƒë√∫ng) ====
        const REVIEW_URL_BASE = "{{ url('/customer/review') }}";

        // Gi·ªØ nguy√™n c√°c h√†m slugify/buildSkuKey b·∫°n ƒëang c√≥
        function slugify(str='') {
            return String(str)
                .normalize('NFKD').replace(/[\u0300-\u036f]/g, '')
                .toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
        }
        function buildSkuKey(name, variant = {}) {
            const n = slugify(name||'');
            const storage = slugify(variant?.storage||'');
            const color = slugify(variant?.color||'');
            return [n, storage, color].join('|');
        }

        // === T·∫°o URL ƒë·ªÉ nh·∫£y sang review v√† focus ƒë√∫ng s·∫£n ph·∫©m ===
        function buildReviewUrl(item, orderId) {
            const sku = buildSkuKey(item?.name || '', item?.variant || {});
            const params = new URLSearchParams({
                order: orderId,
                sku: sku,
                name: item?.name || '',
                color: item?.variant?.color || ''
            });
            return `${REVIEW_URL_BASE}?${params.toString()}`;
        }

        // === Ch·ªâ cho review n·∫øu ƒë∆°n ƒë√£ "ƒê√£ giao h√†ng" & ƒëi·ªÅu h∆∞·ªõng ƒë√∫ng s·∫£n ph·∫©m ===
        function reviewProduct(orderId) {
            const order = ORDER_DETAILS[orderId];
            if (!order) {
                alert(`Kh√¥ng t√¨m th·∫•y ƒë∆°n ${orderId}.`); return;
            }
            // Ch·ªâ cho ƒë√°nh gi√° khi ƒë√£ giao
            if ((order.status || '').toLowerCase().includes('ƒë√£ giao') === false) {
                alert('ƒê∆°n n√†y ch∆∞a giao xong, ch∆∞a th·ªÉ ƒë√°nh gi√° s·∫£n ph·∫©m.');
                return;
            }

            // 1 s·∫£n ph·∫©m -> nh·∫£y th·∫≥ng
            if (order.items?.length === 1) {
                const url = buildReviewUrl(order.items[0], orderId);
                window.location.href = url;
                return;
            }

            // Nhi·ªÅu s·∫£n ph·∫©m -> m·ªü modal ch·ªçn v√† m·ªói n√∫t "‚≠ê ƒê√°nh gi√°" s·∫Ω build URL ri√™ng
            const modal = document.getElementById('orderModal');
            const modalContent = document.getElementById('modalContent');
            modal.classList.remove('hidden');

            modalContent.innerHTML = `
                <div class="space-y-4">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-semibold text-gray-800">Ch·ªçn s·∫£n ph·∫©m ƒë·ªÉ ƒë√°nh gi√°</h3>
                        <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M6 18L18 6M6 6l12 12"></path>
                            </svg>
                        </button>
                    </div>
                    <div class="space-y-3">
                        ${order.items.map(it => {
                            const url = buildReviewUrl(it, orderId);
                            return `
                                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                                    <div>
                                        <p class="font-medium">${it.name}</p>
                                        <p class="text-sm text-gray-500">
                                            S·ªë l∆∞·ª£ng: ${it.qty || 1}
                                            ${it?.variant?.color ? `‚Ä¢ M√†u: ${it.variant.color}` : ''}
                                        </p>
                                    </div>
                                    <a href="${url}"
                                    class="px-3 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg text-sm font-medium">
                                        ‚≠ê ƒê√°nh gi√°
                                    </a>
                                </div>
                            `;
                        }).join('')}
                    </div>
                </div>
            `;
        }


        function reorderProduct(orderId) {
            const order = ORDER_DETAILS[orderId];
            if (!order || !Array.isArray(order.items) || order.items.length === 0) {
                alert(`Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m c·ªßa ƒë∆°n ${orderId}.`);
                return;
            }
            const cart = getCartArray();
            order.items.forEach(it => {
                upsertCartItem(cart, {
                name: it.name,
                price: parseVND(it.price),
                qty: it.qty || 1,
                variant: it.variant || {},
                image: 'default'
                });
            });
            saveCartArray(cart);
            toast(`ƒê√£ th√™m ${order.items.length} s·∫£n ph·∫©m t·ª´ ƒë∆°n ${orderId} v√†o gi·ªè h√†ng!`, 'success');
        }

        /* ========== FIX: ƒê·ªìng b·ªô card ngo√†i v·ªõi ‚ÄúXem chi ti·∫øt‚Äù ========== */
        function parseVND(str) {
            if (typeof str === 'number') return str;
            return Number(String(str).replace(/[^\d]/g, '')) || 0;
        }
        function formatVND(n) {
            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' })
                .format(Number(n) || 0).replace('‚Ç´','‚Ç´');
        }
        function sumOrderItems(order) {
            if (!order?.items?.length) return 0;
            return order.items.reduce((s, it) => s + (parseVND(it.price) * (Number(it.qty)||1)), 0);
        }
        function findOrderCard(orderId) {
            // T√¨m card theo ti√™u ƒë·ªÅ h3 ch·ª©a ‚Äú#<ID>‚Äù
            const cards = document.querySelectorAll('.order-card');
            for (const card of cards) {
                const h3 = card.querySelector('h3');
                if (h3 && h3.textContent.includes(`#${orderId}`)) return card;
            }
            return null;
        }
        function syncOrderCardFromDetails(orderId) {
            const order = ORDER_DETAILS?.[orderId];
            if (!order) return;
            const card = findOrderCard(orderId);
            if (!card) return;

            // 1) T√≠nh l·∫°i total t·ª´ items
            const computedTotal = sumOrderItems(order);

            // 2) C·∫≠p nh·∫≠t s·ªë ti·ªÅn hi·ªÉn th·ªã ngo√†i card (span t·ªïng ti·ªÅn)
            const totalSpan = card.querySelector('.text-lg.font-bold, .text-lg.font-bold.text-gray-800');
            if (totalSpan) totalSpan.textContent = formatVND(computedTotal);

            // 3) ƒê·ªìng b·ªô tr·∫°ng th√°i (n·∫øu mu·ªën ch·∫∑t ch·∫Ω h∆°n)
            const badge = card.querySelector('.status-badge') || card.querySelector('span.bg-green-100, span.bg-blue-100, span.bg-yellow-100');
            if (badge) {
                const st = (order.status || '').toLowerCase();
                if (st.includes('giao')) {           // ƒê√£ giao h√†ng
                    badge.textContent = '‚úÖ ƒê√£ giao h√†ng';
                    badge.className = 'status-badge bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium';
                    card.dataset.status = 'delivered';
                } else if (st.includes('ƒëang giao')) {
                    badge.textContent = 'üöö ƒêang giao h√†ng';
                    badge.className = 'status-badge bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium';
                    card.dataset.status = 'shipping';
                } else if (st.includes('x·ª≠ l√Ω')) {
                    badge.textContent = 'üîÑ ƒêang x·ª≠ l√Ω';
                    badge.className = 'status-badge bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm font-medium';
                    card.dataset.status = 'processing';
                }
            }
        }

        /* G·ªçi ƒë·ªìng b·ªô cho t·∫•t c·∫£ ƒë∆°n c√≥ trong ORDER_DETAILS khi trang t·∫£i xong */
        document.addEventListener('DOMContentLoaded', () => {
            if (typeof ORDER_DETAILS === 'object') {
                Object.keys(ORDER_DETAILS).forEach(syncOrderCardFromDetails);
            }
        });

    </script>
@endsection